{"version":3,"sources":["initial-data.js","TaskEditForm.js","Task.js","Column.js","TaskAddForm.js","App.js","index.js"],"names":["initialData","id","tasks","TaskEditForm","props","useState","title","setTitle","desc","setDesc","handleSubmit","e","preventDefault","className","onClick","type","required","value","onChange","target","maxLength","placeholder","Task","showEdit","setShowEdit","onTaskEdit","task","draggableId","index","provided","ref","innerRef","draggableProps","dragHandleProps","description","Column","taskProps","taskList","map","indexOf","droppableId","direction","droppableProps","colColor","TaskAddForm","setDescription","destroy","App","locstor","JSON","parse","localStorage","getItem","initCols","cols","setCols","showForm","setShowForm","newState","Array","from","insertCol","find","column","newTask","splice","setItem","stringify","editTask","colColors","onDragEnd","result","state","setState","destination","source","col","start","uuidv4","push","addTask","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.69dce650.chunk.js","sourcesContent":["const initialData = [\r\n    {\r\n      id: 'Back Burner', \r\n      tasks: []\r\n    },\r\n    {\r\n      id: 'ToDo', \r\n      tasks: []\r\n    },\r\n    {\r\n      id: 'In Progress', \r\n      tasks: []\r\n    },\r\n    {\r\n      id: 'Complete', \r\n      tasks: []\r\n    },\r\n    {\r\n        id: 'Delete',\r\n        tasks: []\r\n    }\r\n  ];\r\nexport default initialData","import React, { useState } from 'react'\r\nimport './TaskForm.css'\r\n\r\nexport default function TaskEditForm(props) {\r\n    const [title, setTitle] = useState(props.title);\r\n    const [desc , setDesc ] = useState(props.desc );\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        props.handleSubmit(title, desc);\r\n    }\r\n\r\n    return (\r\n        <form className=\"task-edit-form\">\r\n            <div className=\"task-form\">\r\n                <h2>Edit Task</h2>\r\n                <button className=\"close-edit\" onClick={handleSubmit}>X</button>\r\n                <div className=\"shift-up-edit\">\r\n                <label>Task Title: </label>\r\n                <input \r\n                    type=\"text\"\r\n                    required\r\n                    value={title}\r\n                    onChange={(e) => setTitle(e.target.value)}\r\n                />\r\n                <label>Description: </label>\r\n                <textarea \r\n                    required\r\n                    maxLength={400}\r\n                    placeholder={\"Task Description goes here\"}\r\n                    value={desc}\r\n                    onChange={(e) => setDesc(e.target.value)}\r\n                ></textarea>\r\n                <div className=\"done-button\"><button className=\"submit-button\" onClick={handleSubmit}>Done</button></div>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Draggable } from 'react-beautiful-dnd'\r\nimport './Task.css'\r\nimport TaskEditForm from './TaskEditForm'\r\n\r\nfunction Task(props) {\r\n  const [showEdit, setShowEdit] = useState(false);\r\n\r\n  const onTaskEdit = (title, desc) => {\r\n    setShowEdit(false);\r\n    props.onTaskEdit(title, desc, props.task.id);\r\n  }\r\n\r\n  return (\r\n      <Draggable draggableId={props.task.id} index={props.index}>\r\n        {(provided) => (\r\n          <div className=\"task-card\" ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}> \r\n            <h2>{props.task.title}</h2>\r\n            <button onClick={() => setShowEdit(!showEdit)}>...</button>\r\n            <p>{props.task.description}</p>\r\n            { showEdit &&\r\n              <TaskEditForm title={props.task.title} desc={props.task.description} handleSubmit={onTaskEdit} />\r\n            }\r\n          </div>\r\n        )}\r\n      </Draggable>\r\n  );\r\n}\r\n\r\nexport default Task;","import React from 'react';\r\nimport { Droppable } from 'react-beautiful-dnd';\r\nimport Task from './Task';\r\nimport './Column.css';\r\n\r\nfunction Column(props) {\r\n\r\n    const onTaskEdit = (title, desc, id) => { \r\n      let taskProps = [\r\n        title,\r\n        desc,\r\n        props.title,\r\n        id,\r\n        props.taskList.map(task => task.id).indexOf(id)\r\n      ]\r\n      props.onTaskEdit(props.onTaskEdit(taskProps));\r\n    }\r\n\r\n    if (props.title === 'Delete') {\r\n        return (\r\n            <div className=\"delete-dropzone\">\r\n                <Droppable droppableId={props.title} direction=\"horizontal\">\r\n                    {(provided) => (\r\n                        <div {...provided.droppableProps} ref={provided.innerRef}>\r\n                          <p>X</p>\r\n                          {provided.placeholder}\r\n                        </div>\r\n                    )}\r\n                </Droppable>\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n      <div className=\"column\">\r\n        <div className={props.colColor}>\r\n        <div className=\"col-header\"><h3>{props.title}</h3></div>\r\n        <Droppable droppableId={props.title} direction=\"vertical\">\r\n          {(provided) => (\r\n            <div className=\"task-list\"\r\n              {...provided.droppableProps} \r\n              ref={provided.innerRef}\r\n            >\r\n              {props.taskList.map((task, index) => \r\n                <Task key={task.id} task={task} index={index} onTaskEdit={onTaskEdit}\r\n              />)}\r\n              {provided.placeholder}\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default Column;","import React, { useState } from 'react';\r\nimport './TaskForm.css';\r\n\r\nexport default function TaskAddForm(props) {\r\n    const [title, setTitle] = useState('');\r\n    const [description, setDescription] = useState('');\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        props.handleSubmit(title, description);\r\n    }\r\n\r\n    return (\r\n        <form className=\"task-add-form\">\r\n            <div className=\"task-form\">\r\n                <h2>Add New Task</h2>\r\n                <button className=\"close-add\" onClick={() => props.destroy()}>X</button>\r\n                <div className=\"shift-up-add\">\r\n                <label>Task Title: </label>\r\n                <input \r\n                    type=\"text\"\r\n                    required\r\n                    maxLength={60}\r\n                    placeholder={\"Task Title goes here\"}\r\n                    value={title}\r\n                    onChange={(e) => setTitle(e.target.value)}\r\n                />\r\n                <label>Description: </label>\r\n                <textarea \r\n                    maxLength={400}\r\n                    placeholder={\"Task Description goes here\"}\r\n                    required\r\n                    value={description}\r\n                    onChange={(e) => setDescription(e.target.value)}\r\n                ></textarea>\r\n                <button onClick={handleSubmit}>Done</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport initialData from './initial-data';\r\nimport Column from './Column';\r\nimport TaskAddForm from './TaskAddForm';\r\nimport { DragDropContext } from 'react-beautiful-dnd';\r\nimport 'reset-css';\r\nimport './index.css';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst addTask = (state, setState, title, description) => {\r\n    const newState = Array.from(state);\r\n    const newTask = {id: uuidv4(), title: title, description: description};\r\n    const col = newState.find(col => col.id === 'ToDo');\r\n    col.tasks.push(newTask);\r\n\r\n    setState(newState);\r\n    localStorage.setItem(\"State\", JSON.stringify(state));\r\n}\r\n\r\nconst editTask = (taskProps, cols, setCols) => {\r\n  try {\r\n    const newState = Array.from(cols);\r\n    const insertCol = newState.find(column => column.id === taskProps[2]);\r\n    const newTask = {id: taskProps[3], title: taskProps[0], description: taskProps[1]}\r\n    insertCol.tasks.splice(taskProps[4], 1, newTask);\r\n\r\n    setCols(newState);\r\n    localStorage.setItem(\"State\", JSON.stringify(cols));\r\n  } catch(e) {}\r\n}\r\n\r\nconst onDragEnd = (result, state, setState) => {\r\n    const {destination, source, draggableId} = result;\r\n\r\n    if (!destination) {\r\n        return;\r\n    }\r\n\r\n    if (destination.droppableId === source.droppableId && destination.index === source.index) {\r\n      return;\r\n    }\r\n\r\n    if (destination.droppableId === 'Delete') {\r\n        // delete if not destination\r\n        const newState = Array.from(state);\r\n        const start = newState.find(col => col.id === source.droppableId);\r\n        start.tasks.splice(source.index, 1);\r\n        setState(newState);\r\n        localStorage.setItem(\"State\", JSON.stringify(state));\r\n        return;\r\n    }\r\n\r\n    // init new state\r\n    const newState = Array.from(state);\r\n\r\n    // remove the draggableId from the source\r\n    const start = newState.find(col => col.id === source.droppableId);\r\n    const newTask = {...start.tasks.find(task => task.id === draggableId)};\r\n    start.tasks.splice(source.index, 1);\r\n\r\n    // add the draggableId to the destination\r\n    const finsh = newState.find(col => col.id === destination.droppableId);\r\n    finsh.tasks.splice(destination.index, 0, newTask);\r\n\r\n    setState(newState);\r\n    localStorage.setItem(\"State\", JSON.stringify(state));\r\n}\r\n\r\nconst initCols = () => {\r\n    const locstor = JSON.parse(localStorage.getItem(\"State\"));\r\n    if (locstor === null) {\r\n        return initialData;\r\n    }\r\n    return locstor;\r\n}\r\n\r\nfunction App() {\r\n    const [cols, setCols] = useState(initCols());\r\n    const [showForm, setShowForm] = useState(false);\r\n\r\n    const handleAddSubmit = (title, description) => { setShowForm(false); addTask(cols, setCols, title, description) };\r\n    const onTaskEdit = (taskProps) => { editTask(taskProps, cols, setCols) };\r\n    \r\n    const colColors = ['column-orange', 'column-blue', 'column-red', 'column-green', null]\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"header\"><h1>Hassle</h1></div>\r\n        <DragDropContext onDragEnd={result => onDragEnd(result, cols, setCols)}>\r\n          <div className=\"main-content\"> \r\n            {cols.map((col, index) => {\r\n              return <Column title={col.id} taskList={col.tasks} colColor={colColors[index]} onTaskEdit={onTaskEdit} />\r\n            })}\r\n          </div>\r\n        </DragDropContext>\r\n        <button className=\"add-button\" onClick={() => setShowForm(!showForm)}><h1>+</h1></button>\r\n        {showForm && \r\n          <TaskAddForm handleSubmit={handleAddSubmit} destroy={() => setShowForm(false)} />\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n  export default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}